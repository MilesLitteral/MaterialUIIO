# SELECT, equivalent to SELECT * FROM countries
# response    = supabase.table('countries').select("*").execute()

# INSERT, equivalent to INSERT  INTO countries (id, name) VALUES (1, 'Denmark')
# data, count = supabase.table('countries').insert({"id": 1, "name": "Denmark"}).execute()

# CREATE USER, equivalent
# res = supabase.auth.sign_up({
#   "email": 'example@email.com',
#   "password": 'example-password',
# })

# SIGN-IN, equivalent
# data = supabase.auth.sign_in_with_password({"email": "j0@supabase.io", "password": "testsupabasenow"})

# SIGN-IN WITH OTP, equivalent
# data = supabase.auth.sign_in_with_otp({
#   "email": 'example@email.com',
#   "options": {
#     "email_redirect_to": 'https://example.com/welcome'
#   }
# })

# SIGN-IN WITH OAUTH, equivalent
# data = supabase.auth.sign_in_with_oauth({
#   "provider": 'github'
# })

# SIGN-OUT, equivalent
# res = supabase.auth.sign_out()

# GET CURRENT SESSION, equivalent
# res = supabase.auth.get_session()
# res = supabase.auth.refresh_session()
# res = supabase.auth.set_session(access_token, refresh_token)

# SUPABASE FUNCTION Use 
# func = supabase.functions()
# @asyncio.coroutine
# async def test_func(loop):
#   resp = await func.invoke("hello-world",invoke_options={'body':{}})
#   return resp

# loop = asyncio.get_event_loop()
# resp = loop.run_until_complete(test_func(loop))
# loop.close()

# res = supabase.storage.create_bucket(name)
# res = supabase.storage.get_bucket(name)
# res = supabase.storage.list_buckets()
# res = supabase.storage.delete_bucket(name)
# res = supabase.storage.empty_bucket(name)

# UPLOAD FILE, equivalent
# with open(source, 'rb+') as f:
#   res = supabase.storage.from_('bucket').upload(destination, f)

# DOWNLOAD FILE, equivalent
# with open(destination, 'wb+') as f:
#   res = supabase.storage.from_(bucket_name).download(source)
#   f.write(res)

# res = supabase.storage.from_(bucket_name).get_public_url('test/avatar1.jpg')
